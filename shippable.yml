resources:
  - name: w_git_resource
    type: gitRepo
    repoPath: scriptnull/sample_node
    configuration:
      integrationName: github
      branches:
        only: j-gitrepo
    initialVersion:
      sha: j-gitrepo
      
  - name: w_out_webhook
    type: webhook
    configuration:
      integrationName: out-webhook-int
    initialVersion:
      payload: "hello"
      
  - name: w_w19node_img
    type: image
    imageName: drydock/w19node
    configuration:
      integrationName: dockerint
    initialVersion:
      imageTag: master

pipelines:
  - name: test_pipeline
    steps:
      - name: start
        type: powershell
        requires:
          resources:
            - w_git_resource
        execution:
          onExecute:
            - Write-Output "hi"

      - name: test_basic_execute
        type: powershell
        requires:
          steps:
            - start
        execution:
          onExecute:
            - Write-Output "hi"

      - name: test_basic_multicmd_execute
        type: powershell
        requires:
          steps:
            - start
        execution:
          onExecute:
            - Write-Output "hi"
            - Write-Output "hello"
            - Get-ChildItem env:*

      - name: test_basic_throw_execute
        type: powershell
        requires:
          steps:
            - start
        execution:
          onExecute:
            - Write-Output "starting"
            - Throw "sample_error"
            - Write-Output "after error

      - name: test_basic_full_execute
        type: powershell
        requires:
          steps:
            - start
        execution:
          onStart:
            - Write-Output "starting onStart"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
          onExecute:
            - Write-Output "starting onExecute"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
          onSuccess:
            - Write-Output "starting onSuccess"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
          onComplete:
            - Write-Output "starting onComplete"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
            
      - name: test_basic_execute_failure
        type: powershell
        requires:
          steps:
            - start
        execution:
          onStart:
            - Write-Output "starting onStart"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
          onExecute:
            - Write-Output "starting onExecute"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
            - cat invalid-file.txt
            - Write-Output "this should not be executed"
          onSuccess:
            - Write-Output "starting onSuccess"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
          onFailure:
            - Write-Output "starting onFailure"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
          onComplete:
            - Write-Output "starting onComplete"
            - Write-Output "CURRENT_SCRIPT_SECTION = $env:CURRENT_SCRIPT_SECTION"
            
      - name: test_output_external_webhook
        type: powershell
        requires:
          steps:
            - start
        outputResources:
          - w_out_webhook
        execution:
          onExecute:
            - Write-Output "hi"
            - Get-ChildItem env:*
            
      - name: test_requires_img
        type: powershell
        requires:
          steps:
            - start
          resources:
            - w_w19node_img
        execution:
          onExecute:
            - Write-Output "hi"
            - Get-ChildItem env:*


########################### Environment Variable Checking ########################
      - name: start_env
        type: powershell
        requires:
          steps:
            - start
        execution:
          onExecute:
            - Write-Output "this job should trigger all the env testing jobs"

      - name: test_default_env_normal
        type: powershell
        triggeredBy:
          steps:
            - start_env
        setup:
          environmentVariables:
            normal:
              key1: value1
              key2: value2
        execution:
          onExecute:
            - Get-ChildItem env:*
            - echo "key1 = $env:key1"
            - echo "key2 = $env:key2"
            - |
              "$env:key1" -eq "value1" -or $(throw "Environment variable mismatch")
            - |
              "$env:key2" -eq "value2" -or $(throw "Environment variable mismatch")

      - name: test_host_env_normal
        type: powershell
        triggeredBy:
          steps:
            - start_env
        setup:
          environmentVariables:
            normal:
              key1: value1
              key2: value2
          runtime:
            type: host
        execution:
          onExecute:
            - Get-ChildItem env:*
            - |
              "$env:key1" -eq "value1" -or throw "Environment variable mismatch"
            - |
              "$env:key2" -eq "value2" -or throw "Environment variable mismatch"
            
      # Checks all builtin environment variables provided by JFrog step
      - name: test_default_env_builtin
        type: powershell
        triggeredBy:
          steps:
            - start_env
        execution:
          onExecute:
            - Get-ChildItem env:*
            - |
              Function global:non_empty([string]$arg) {
                if (!$(Get-ChildItem "env:$arg").value) {
                  throw "expected non-empty value for $arg";
                }
                return $True;
              }
            - non_empty 'STATUS_DIR'
            - non_empty 'STEPLET_ID'
            - non_empty 'STEP_JSON_PATH'
            - non_empty 'STEPLET_SCRIPT_PATH'
            - non_empty 'REQEXEC_BIN_PATH'
            - non_empty 'RUN_DIR'
            - non_empty 'STEP_DEPENDENCY_STATE_DIR'
            - non_empty 'STEP_OUTPUT_DIR'
            - non_empty 'STEP_WORKSPACE_DIR'
            - non_empty 'PIPELINE_WORKSPACE_DIR'
            - non_empty 'STEP_TMP_DIR'
            - non_empty 'OPERATING_SYSTEM'
            - non_empty 'ARCHITECTURE'
            - non_empty 'REQEXEC_DIR'
            - non_empty 'SHIPPABLE_API_URL'
            - non_empty 'BUILDER_API_TOKEN'
            - non_empty 'NO_VERIFY_SSL'
            - non_empty 'STEP_DOCKER_CONTAINER_NAME'
