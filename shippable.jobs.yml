jobs:
  # - name: sn-kube-man
  #   type: manifest
  #   steps:
  #     - IN: sn-img-1
  #     - IN: sn-kube-trigger
  #     - IN: sn-kube-pod-opts
  #
  # - name: sn-kube-deploy
  #   type: deploy
  #   steps:
  #     - IN: sn-kube-man
  #     - IN: sn-kube-cluster
  #     - TASK: managed
  #       deployMethod: upgrade

  # - name: sn-man-jfrog
  #   type: manifest
  #   steps:
  #     - IN: sn-file-jfrog
      # - IN: sn-file

  # - name: sn-file-deploy
  #   type: deploy
  #   steps:
  #     - IN: sn-man-jfrog
  #     - IN: sn-cluster

  # - name: sn-file-man-9
  #   type: manifest
  #   steps:
  #     - IN: sn-file
      # - IN: sn-params
      # - IN: sn-vici-http-js
      # - IN: sn-file-trigger
      # - name: sn-vici-man

  #   type: manifest
  #   steps:
  #     - IN: sn-vici-http-js
  #     - IN: sn-file-man
  #     - IN: sn-vici-trigger

  # - name: sn-cluster-dep-9
  #   type: deploy
  #   steps:
  #     - IN: sn-file-man-9
  #     - IN: sn-cluster
  #     - TASK:
  #         - script: xkcd
  #
  # - name: sn-tri-man
  #   type: manifest
  #   steps:
  #     - IN: sn-private-image
  #     - IN: sn-tm-trigger
  #
  # - name: sn-tri-dep-1
  #   type: deploy
  #   steps:
  #     - IN: sn-tri-man
  #     - IN: sn-tri-cluster
  #
  # - name: sn-release-1
  #   type: release
  #   steps:
  #     - IN: sn-tri-dep-1
  #     - TASK: managed
  #       bump: patch

  # - name: sn-tri-dep-upgrade
  #   type: deploy
  #   steps:
  #     - IN: sn-tri-man
  #     - IN: sn-scaler
  #     - IN: sn-tri-cluster
  #     - TASK: managed
  #       deployMethod: upgrade

  # - name: sn-tri-dep-replace
  #   type: deploy
  #   steps:
  #     - IN: sn-tri-man
  #     - IN: sn-tri-cluster
  #     - TASK: managed
  #       deployMethod: replace

  # - name: sn-gke-man
  #   type: manifest
  #   steps:
  #     - IN: sn-dk
  #     - IN: sn-gke-trigger
  #
  # - name: sn-gke-dep
  #   type: deploy
  #   steps:
  #     - IN: sn-gke-man
  #     - IN: sn-gke-cluster
  #
  # - name: sn-ddc-man
  #   type: manifest
  #   steps:
  #     - IN: sn-img-1
  #     - IN: sn-dockerOpts-1
  # #
  # - name: sn-ddc-man-1
  #   type: manifest
  #   steps:
  #     - IN: sn-dk
  #     - IN: sn-ddc-trigger
  # #
  # - name: sn-ddc-dep
  #   type: deploy
  #   steps:
  #     - IN: sn-ddc-man
  #     - IN: sn-dockerOpts-2
  #       applyTo:
  #         - sn-ddc-man
  #     - IN: sn-ddc-cluster

  # - name: sn-dcl-man
  #   type: manifest
  #   steps:
  #     - IN: sn-ep
  #     - IN: sn-scaler
  #     - IN: sn-dcl-trigger

  # - name: sn-dcl-man-1
  #   type: manifest
  #   steps:
  #     - IN: sn-dk
  #     - IN: sn-dcl-trigger

  # - name: sn-dcl-dep-13
  #   type: deploy
  #   steps:
  #     - IN: sn-dcl-man
  #     - IN: sn-dcl-cluster
  #     - TASK: managed
  #       deployMethod: upgrade

  # - name: sn-ecs-lb-man
  #   type: manifest
  #   steps:
  #     - IN: sn-ep
  #     - IN: sn-dk
  #     - IN: sn-ecs-lb-trigger
  #
  # - name: sn-ecs-lb-deploy
  #   type: deploy
  #   steps:
  #     - IN: sn-ecs-lb-man
  #     - IN: sn-ecs-lb-cluster
  #     - IN: lb-loadbalancer1
  #       applyTo:
  #         - manifest: sn-ecs-lb-man
  #           image: sn-dk
  #         - manifest: sn-ecs-lb-man
  #           image: sn-ep
  #         - manifest: sn-ecs-lb-man
  #           image: sn-myapp3
  #     - TASK: managed
  #       deployMethod: upgrade
  #
  # - name: sn-mix-a-man
  #   type: manifest
  #   steps:
  #     - IN: sn-ep
  #     - IN: sn-mix-a-trigger
  #
  # - name: sn-mix-b-man
  #   type: manifest
  #   steps:
  #     - IN: sn-ep
  #     - IN: sn-mix-b-trigger

  # - name: sn-multi-manifest-gke
  #   type: deploy
  #   steps:
  #     - IN: sn-mix-a-man
  #       force: true
  #     - IN: sn-mix-b-man
  #       force: true
  #     - IN: sn-gke-cluster
  #     - TASK: managed
  #       deployOptions:
  #         - parallel

  # - name: sn-provision
  #   type: provision
  #   steps:
  #     - IN: sn-img-1
  #
  # - name: deployService-2
  #   type: provision
  #   steps:
  #     - IN: sn-kube-service-lb

  # - name: deployService-2
  #   type: provision
  #   steps:
  #     - IN: sn-kube-service-lb

  # - name: sn-try-do
  #   type: runCLI
  #   steps:
  #     - IN: sn-do-cliConfig
  #     - IN: sn-anisble-repo
  #     - TASK:
  #         - script: printenv
  #         - script: echo "hello world"
  #         - script: doctl compute ssh-key list
  #         - script: cat $SNANISBLEREPO_STATE/digital-ocean.yml
  #         - script: ansible-playbook $SNANISBLEREPO_STATE/digital-ocean.yml

  # - name: sn-try-do-sh
  #   type: runSh
  #   steps:
  #     - IN: sn-do-cliConfig
  #     - TASK:
  #         - script: printenv
  #         - script: echo "hello world"
  #         - script: doctl compute ssh-key list
  #
  # - name: sn-try-maz
  #   type: runCLI
  #   steps:
  #     - IN: sn-maz-cliConfig
  #     - TASK:
  #         - script: printenv
  #         - script: echo "hello world"
  #         - script: az account list-locations
  #         # - script: echo "executing pip install msrestazure"
  #         # - script: pip install msrestazure
  #         - script: echo "executing pip install azure>=2.0.0rc5"
  #         - script: pip install "azure==2.0.0rc5"
  #         - script: ansible --version
  #         - script: ansible-playbook $SNANISBLEREPO_STATE/azure.yml
  #

  # - name: sn-try-aws
  #   type: runCLI
  #   steps:
  #     - IN: sn-aws-cliConfig
  #     - IN: sn-anisble-repo
  #     - TASK:
  #         - script: printenv
  #         - script: aws ec2 describe-regions
  #         - script: cat $SNANISBLEREPO_STATE/aws.yml
  #         - script: ansible-playbook $SNANISBLEREPO_STATE/aws.yml

  # - name: sn-try-gcl
  #   type: runCLI
  #   steps:
  #     - IN: sn-gcl-cliConfig
  #     - IN: sn-anisble-repo
  #     - TASK:
  #         - script: printenv
  #         - script: echo "hello world"
  #         - script: gcloud compute instances list
  #         - script: ansible-playbook $SNANISBLEREPO_STATE/google-cloud.yml
  #
  - name: sn-try-sub-ssh
    type: runSh
    steps:
      - IN: sn-anisble-repo
      # - IN: sn-ssh
      - TASK:
          - script: printenv
          - script: sleep 5m
          # - script: ansible-playbook $SNANISBLEREPO_STATE/sub-ssh.yml -i $SNANISBLEREPO_STATE/hosts --private-key $SNSSH_KEYPATH
          # - script: cat $SNSSH_PUBLIC_KEY_PATH
          # - script: cat $SNSSH_PRIVATE_KEY_PATH

  # - name: sn-aws-man
  #   type: manifest
  #   steps:
  #     - IN: sn-img-1
  #     - IN: sn-dockerOpts-1
  #
  # - name: sn-aws-dep-1
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: replace

  # - name: sn-aws-dep-from-dep
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-dep
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: replace

  # - name: sn-aws-man
  #   type: manifest
  #   steps:
  #     - IN: sn-img-1
  #     - IN: sn-dockerOpts-1
  #     # - IN: sn-docker-myapp3-80
  #     - IN: sn-ecs-trigger


  # - name: sn-aws-new-man
  #   type: manifest
  #   steps:
  #     - IN: sn-img-1
  #     - IN: sn-dockerOpts-1
  #     # - IN: sn-docker-myapp3-80
  #     - IN: sn-ecs-trigger

### old deployments

  # - name: sn-aws-old-deploy-re
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: replace

  # - name: sn-aws-old-deploy-up
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #     - IN: sn-ecs-cluster
  #     - IN: sn-ecs-lb-2
  #       applyTo:
  #         - manifest: sn-aws-man
  #           image: sn-img-1
  #           port: 80
  #     - TASK: managed
  #       deployMethod: upgrade


  # - name: sn-aws-old-deploy-bg
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #       deployName: bg-app
  #     - IN: sn-ecs-cluster

### New deployments

  # - name: sn-aws-old-deploy-re
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #       deployName: not-show-replace
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: replace
  #
  # - name: sn-aws-old-deploy-up
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #       deployName: not-show-upgrade
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: upgrade
  # #
  # - name: sn-aws-old-deploy
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #       deployName: will-change-bg
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: blueGreen
  #
  # - name: sn-aws-new-deploy-re
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #       deployName: yo-app-replace
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: replace
  #
  # - name: sn-aws-new-deploy-up
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #       deployName: yo-app-upgrade
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: upgrade
  # #
  # - name: sn-aws-new-deploy
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #       deployName: yo-app-bluegreen
  #     - IN: sn-ecs-cluster
  #     - TASK: managed
  #       deployMethod: blueGreen

  # - name: sn-aws-man-aa
  #   type: manifest
  #   steps:
  #     - IN: sn-img-2
  #     - IN: sn-dockerOpts-1
  #     - IN: sn-ecs-trigger

  # - name: sn-aws-upgrade-d8
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #     - IN: sn-ecs-cluster
  #     - IN: sn-ecs-lb
  #       applyTo:
  #         - manifest: sn-aws-man
  #           image: sn-img-1
  #           port: 80
  #     - TASK: managed
  #       deployMethod: upgrade


  # - name: sn-aws-bluegreen-d1-b4
  #   type: deploy
  #   steps:
  #     - IN: sn-aws-man
  #     - IN: sn-ecs-cluster
  #     - IN: sn-ecs-lb
  #       applyTo:
  #         - manifest: sn-aws-man
  #           image: sn-img-1
  #           port: 80
  #     - TASK: managed
  #       deployMethod: blueGreen
